//Batch:-C2
//Name:- Pratik yadav
//Roll no:- 213030
//PRN no:- 22310856
//EXPT- 7 AVR + ACD+ LCD interfacing

#define F_CPU 8000000UL /*define CPU frequency 8MHz*/
#include <avr/io.h>
#include <util/delay.h>
#include <stdio.h>
#include <string.h>

#define LCD_Data_Dir DDRC
#define LCD_Command_Dir DDRD
#define LCD_Data_Port PORTC
#define LCD_Command_Port PORTD
#define RS PD7                 /* register select*/
#define RW PD6                 /* read/write*/
#define EN PD5                 /*Enable*/

#define degree_sysmbol 0xdf

void LCD_Command(unsigned char cmnd){
 LCD_Data_Port= cmnd;
 LCD_Command_Port &= ~(1<<RS);
 LCD_Command_Port &= ~(1<<RW);
 LCD_Command_Port |= (1<<EN);
 _delay_us(1);
 LCD_Command_Port &= ~(1<<EN);
 _delay_ms(2);
}

void LCD_Char (unsigned char char_data)
{
 LCD_Data_Port= char_data;
 LCD_Command_Port |= (1<<RS);
 LCD_Command_Port &= ~(1<<RW);
 LCD_Command_Port |= (1<<EN);
 _delay_us(1);
 LCD_Command_Port &= ~(1<<EN);
 _delay_ms(2);
}

void LCD_Init (void)
{
 LCD_Command_Dir = 0xFF;
 LCD_Data_Dir = 0xFF;
 _delay_ms(20);
 LCD_Command(0x38);
 LCD_Command(0x0C);
 LCD_Command(0x06);
 LCD_Command(0x01);
 _delay_ms(2);
 LCD_Command(0x80);
}

void ADC_Init()
{
 DDRA = 0x00;
 ADCSRA = 0x87;
 ADMUX = 0x40;
}

void LCD_String (char *str)
{
 int i;
 for(i=0;str[i]!=0;i++)
 {
  LCD_Char (str[i]);
 }
}

int ADC_Read(char channel)
{
 ADMUX = 0X40 | (channel & 0x07);
 ADCSRA |= (1<<ADSC);
 while (!(ADCSRA & (1<<ADIF)));
 ADCSRA |= (1<<ADIF);
 _delay_ms(1);
 return ADCW;
}

int main(void)
{
 char Temperature[10];
 float celsius;
 
 LCD_Init();
 ADC_Init();
 
 while(1)
 {
  LCD_Command(0x80);
  LCD_String("Temperature");
  LCD_Command(0xc0);
  
  celsius = (ADC_Read(0)*4.88);
  celsius = (celsius/10.00);
  celsius = ((celsius - 32)/9)*5;
  sprintf(Temperature,"%d%cC", (int)celsius, degree_sysmbol);
  LCD_String(Temperature);
  
  _delay_ms(1000);
 }
}
