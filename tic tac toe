import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print(" - " * 3)

def check_winner(board, player):
    winning_combinations = [
        [(0, 0), (0, 1), (0, 2)],
        [(1, 0), (1, 1), (1, 2)],
        [(2, 0), (2, 1), (2, 2)],
        [(0, 0), (1, 0), (2, 0)],
        [(0, 1), (1, 1), (2, 1)],
        [(0, 2), (1, 2), (2, 2)],
        [(0, 0), (1, 1), (2, 2)],
        [(0, 2), (1, 1), (2, 0)]
    ]
    for combo in winning_combinations:
        if all(board[row][col] == player for row, col in combo):
            return True
    return False

def is_full(board):
    return all(cell != " " for row in board for cell in row)

def get_move():
    while True:
        try:
            move = int(input("Enter a position (1-9): ")) - 1
            if move in range(9):
                return divmod(move, 3)
            else:
                print("Invalid input. Please enter a number between 1 and 9.")
        except ValueError:
            print("Invalid input. Please enter a number.")

def get_computer_move(board):
    available_moves = [(r, c) for r in range(3) for c in range(3) if board[r][c] == " "]
    return random.choice(available_moves)

def main():
    board = [[" " for _ in range(3)] for _ in range(3)]
    human_player = "X"
    computer_player = "O"
    current_player = human_player

    while True:
        print_board(board)
        print(f"Player {current_player}'s turn")

        if current_player == human_player:
            row, col = get_move()
        else:
            print("Computer is making a move...")
            row, col = get_computer_move(board)

        if board[row][col] == " ":
            board[row][col] = current_player
        else:
            print("Cell is already occupied, try again.")
            continue

        if check_winner(board, current_player):
            print_board(board)
            if current_player == human_player:
                print("Congratulations! You win!")
            else:
                print("Computer wins!")
            break

        if is_full(board):
            print_board(board)
            print("It's a draw!")
            break

        current_player = computer_player if current_player == human_player else human_player

if _name_ == "_main_":
    main()
